# ===========================================
# Copyright V3 Alliance, September 2014, all rights reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, 
# software distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions 
# and limitations under the License.
# ===========================================
# heat_jenkins.yml
# A heat script to build a continuous integration (CI) server.
# manifest:
# 0. Python
# 1. Java
# 2. Jenkins
# 3. Subversion (maybe)
# ===========================================
HeatTemplateFormatVersion: '2012-12-12'
Description: "A Continuous Integration Server. Includes Jenkins and maybe Subversion. "
Parameters: 
    ProjectName: 
        Description: "The name of the software development project. "
        Type: "String"
        Default: "BirdFI"
    KeyName: 
        Description: "Name of an existing EC2 KeyPair to enable SSH access to the instance. "
        Type: "String"
        Default: "richard_on_nectar_v3"
    InstanceType:
        Description: "The size of the VM. "
        Type: String
        Default: "m1.small"
        AllowedValues:
            - m1.small
            - m1.medium
            - m1.large
            - m1.xlarge
            - m1.xxlarge
    ImageId:
        Description: "The base VM image used to build the Jenkins server. This needs to have the python tools installed."
        Type: String
        Default: "574e0ad4-7246-4f9e-bb13-87a941d3ddf9" # ubuntu-12.04.4
        #AllowedValues: ["574e0ad4-7246-4f9e-bb13-87a941d3ddf9","ubuntu-12.4"]
    AvailabilityZone: 
        Description: "Physical location of the Jenkins server. "
        Type: String
        Default: "NCI"
        AllowedValues:
            - NCI
            - melbourne
            - melbourne-np
            - melbourne-qh2
            - qld
            - sa
    UrlDomainName: # Use DynDNS or similar service to create s domain name.
        Description: "Domain name. "
        Type: String
        Default: "jenkins.dontexist.com"
    JenkinsUnixAccountPassword: 
        Description: "A password used for the Jenkins user. Change this!"
        Type: "String"
        Default: "fuzzyface*@9"
    InstallSubversion: # Install a Subversion instance.
        Description: "Flag to indicate a request to install Subversion on the Jenkins server. "
        Type: String
        Default: "No"
        AllowedValues:
            - "No"
            - "Yes"
    SubversionPassword: 
        Description: "A password used for the Subversion user. Change this!"
        Type: "String"
        Default: "fuzzyface*@9"
    SubversionUnixAccountPassword: 
        Description: "A password used for the subversion user. Change this!"
        Type: "String"
        Default: "fuzzyface*@9"
    SubversionRepositoryUsername: 
        Description: "A user name for access to the project repository. Change this!"
        Type: "String"
        Default: "jbloggs"
    SubversionRepositoryPassword: 
        Description: "A password for access to the project repository. Change this!"
        Type: "String"
        Default: "munkledust(1B"
    InstallDjangoProject: # Install a Django project.
        Description: "Flag to indicate a request to install Django/Python support on the Jenkins server. "
        Type: String
        Default: "Yes"
        AllowedValues:
            - "No"
            - "Yes"
#Mappings:
#    InstanceId:
#        'ubuntu-12.04': {ImageId: c64cacf2-c269-4a95-aae6-7f1a3913f9eb}
Resources: 
    # http://docs.openstack.org/developer/heat/template_guide/cfn.html#AWS::EC2::SecurityGroup
    DefaultSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Standard firewall rules for ping, SSH and HTTP/S.
            SecurityGroupIngress:
                - {IpProtocol: icmp, FromPort: '-1', ToPort: '-1', CidrIp : 0.0.0.0/0}
                - {IpProtocol: tcp, FromPort: '22', ToPort: '22', CidrIp: 0.0.0.0/0}
                - {IpProtocol: tcp, FromPort: '80', ToPort: '80', CidrIp: 0.0.0.0/0}
                - {IpProtocol: tcp, FromPort: '443', ToPort: '443', CidrIp: 0.0.0.0/0}
    JenkinsSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Jenkins firewall rules. Web and Git interfaces.
            SecurityGroupIngress:
                - {IpProtocol: tcp, FromPort: '8080', ToPort: '8080', CidrIp: 0.0.0.0/0}
    SubversionSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Subversion firewall rules. Custom svn protocol.
            SecurityGroupIngress:
                - {IpProtocol: tcp, FromPort: '3690', ToPort: '3690', CidrIp: 0.0.0.0/0}
    DjangoTestSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: WSGI Server firewall rules.
            SecurityGroupIngress:
                - {IpProtocol: tcp, FromPort: '8000', ToPort: '8000', CidrIp: 0.0.0.0/0}
# http://docs.openstack.org/developer/heat/template_guide/cfn.html#AWS::EC2::Instance
# To get the node IP address see: https://wiki.openstack.org/wiki/Heat/ApplicationDeployment
    JenkinsServer: 
        Type: "AWS::EC2::Instance"
        Properties: 
            KeyName: {Ref: KeyName}
            #ImageId: {Fn::FindInMap: [InstanceId, {Ref: ImageName}, ImageId]}
            ImageId:  {Ref: ImageId}
            InstanceType: {Ref: InstanceType}
            AvailabilityZone: {Ref: AvailabilityZone}
            SecurityGroups: 
                - {Ref: "DefaultSecurityGroup"}
                - {Ref: "JenkinsSecurityGroup"}
                - {Ref: "SubversionSecurityGroup"}
                - {Ref: "DjangoTestSecurityGroup"}
            UserData:
                Fn::Base64:
                    Fn::Replace:
                      - _project_name_: {Ref: ProjectName}
                        _domain_name_: {Ref: UrlDomainName}
                        _jenkins_account_password_: {Ref: JenkinsUnixAccountPassword}
                        _install_svn_: {Ref: InstallSubversion}
                        _subversion_account_password_: {Ref: SubversionUnixAccountPassword}
                        _subversion_repo_username_: {Ref: SubversionRepositoryUsername}
                        _subversion_repo_password_: {Ref: SubversionRepositoryPassword}
                        _install_django_: {Ref: InstallDjangoProject}
                      - |
                        #!/bin/bash -v
                        apt-get -y update; apt-get -y upgrade

                        updatedb
                        cd /tmp
                        wget --no-cache https://raw.githubusercontent.com/rrothwell/heat_continuous_integration_server/master/install_java.sh
                        chmod u+x install_java.sh
                        wget --no-cache https://raw.githubusercontent.com/rrothwell/heat_continuous_integration_server/master/install_jenkins.sh
                        chmod u+x install_jenkins.sh
                        wget --no-cache https://raw.githubusercontent.com/rrothwell/heat_continuous_integration_server/master/install_subversion.sh
                        chmod u+x install_subversion.sh
                        wget --no-cache https://raw.githubusercontent.com/rrothwell/heat_continuous_integration_server/master/install_continuous_integration_server.sh
                        chmod u+x install_continuous_integration_server.sh
                        wget --no-cache https://raw.githubusercontent.com/rrothwell/heat_continuous_integration_server/master/install_django_ci.sh
                        chmod u+x install_django_ci.sh
                        
                        export PROJECT_NAME=_project_name_
                        echo "Project name: $PROJECT_NAME"
                        export DOMAIN_NAME=_domain_name_
                        echo "Domain name: $DOMAIN_NAME"
                        export IP_ADDRESS=`wget -qO -  http://169.254.169.254/latest/meta-data/local-ipv4`
                        echo $IP_ADDRESS
                        export HOSTNAME=`hostname`
                        echo "Hostname: $HOSTNAME"
                        
                        export JENKINS_ACCOUNT_PASSWORD="_jenkins_account_password_"
                        echo "Jenkins account password: $JENKINS_ACCOUNT_PASSWORD"
                        
                        export INSTALL_SVN=_install_svn_
                        echo "Install subversion: $INSTALL_SVN"

                        export SVN_ACCOUNT_PASSWORD="_subversion_account_password_"
                        echo "SVN passord: $ACCOUNT_PASSWORD"
                        export SVN_USERNAME=_subversion_repo_username_
                        echo "Repository username: $SVN_USERNAME"
                        export SVN_PASSWORD="_subversion_repo_password_"
                        echo "Repository password: $SVN_PASSWORD"

                        export INSTALL_DJANGO="_install_django_"
                        echo "Install Django build support: $INSTALL_DJANGO"

                        # Download and install CI Server components
                        
                        ./install_continuous_integration_server.sh
                        
                        rm install_continuous_integration_server.sh
                        rm install_jenkins.sh
                        rm install_java.sh
                        rm install_subversion.sh
Outputs: 
    JenkinsSSHAccess: 
        Description: "Login via ssh using this command: "
        Value: 
            Fn::Join: 
                - ""
                - 
                    - "ssh -i /local/path/to/private/key/file.pem root@"
                    - 
                        Fn::GetAtt: 
                            - "JenkinsServer"
                            - "PublicIp"
    DomainSetting: 
        Description: "Register the domain name with a service such as DynDNS, before setting the domain name here. "
    ManualConfiguration: 
        Description: "Complete the process by logging in at http://$DOMAIN_NAME:8080/ and creating a superadmin account. 
Comply with the Standard Security Setup: https://wiki.jenkins-ci.org/display/JENKINS/Standard+Security+Setup"
